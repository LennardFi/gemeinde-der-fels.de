datasource db {
    provider = "postgresql"
    url      = env("POSTGRES_URL")
}

generator client {
    provider = "prisma-client-js"
}

model DatabaseMetadata {
    id        Int      @id @unique @default(autoincrement())
    version   Int
    isDevData Boolean?
}

enum FileRole {
    SermonAudioFile
}

model File {
    id             String    @id @unique @default(uuid()) @db.Uuid
    fileId         String    @unique @default(uuid()) @db.Uuid
    name           String
    extension      String
    mimeType       String
    uploadDateTime DateTime
    role           FileRole?
    Sermon         Sermon[]
}

model ErrorLog {
    id            Int           @id @unique @default(autoincrement())
    errorId       String        @unique
    timestamp     DateTime
    cause         String
    message       String
    internalError Json?
    ResponseLog   ResponseLog[]
}

model ResponseLog {
    id              Int       @id @unique @default(autoincrement())
    timestamp       DateTime
    status          String
    success         Boolean
    errorLogEntry   ErrorLog? @relation(fields: [errorLogEntryId], references: [id])
    errorLogEntryId Int?
    data            Bytes?
    dataSize        Int?
    statusText      String?
}

model NewsPost {
    id              Int      @id @unique @default(autoincrement())
    publicationDate DateTime
    title           String
    description     String
}

model Sermon {
    id          Int           @id @unique @default(autoincrement())
    title       String
    date        DateTime
    audioFile   File          @relation(fields: [audioFileId], references: [id])
    audioFileId String        @db.Uuid
    series      SermonSeries? @relation(fields: [seriesId], references: [id])
    seriesId    Int?
    speaker     SermonSpeaker @relation(fields: [speakerId], references: [id])
    speakerId   Int
}

model SermonSpeaker {
    id       Int      @id @unique @default(autoincrement())
    name     String   @unique
    initials String   @unique
    sermon   Sermon[]
}

model SermonSeries {
    id    Int      @id @unique @default(autoincrement())
    title String
    parts Sermon[]
}

model User {
    id           Int     @id @unique @default(autoincrement())
    email        String  @unique
    userName     String  @unique
    passwordHash String
    disabled     Boolean @default(false)

    // Flags:
    AdminFlag          Boolean @default(false) // Can promote users to admins
    ManageCalendarFlag Boolean @default(false) // Can change calendar
    ManageNewsFlag     Boolean @default(false) // Can change news
    ManageSermonsFlag  Boolean @default(false) // Can change sermons
    ManageRoomsFlag    Boolean @default(false) // Can change rooms
    ManageUserFlag     Boolean @default(false) // Can create users
}
